@using Railway.Services.Infrastructure.Enums
@using Railway.Domain

@model Railway.Web.Models.PassengerModel
@{
    var passengerTypes = EnumExtensions.GetItems<PassengerType>();
    ViewBag.Title = Model == null || Model.Id == default(int) ? "Добавление нового пассажира" : "Редактирование информации о пассажире";
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}

<div>
    @using (Html.BeginForm("Info", "Passenger", FormMethod.Post, new { role = "form" }))
    {
        <h4>@ViewBag.Title</h4>

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })

            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label" })
            <select type="text" class="form-control" id="Type" name="Type">
                @foreach (var type in passengerTypes)
                {
                    <option value="@type.Id" @(Model != null && (int)Model.Type == type.Id ? "selected" : "")>@type.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BirthDay, new { @class = "control-label" })

            @Html.EditorFor(model => model.BirthDay, new { @type = "date", htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDay, null, new { @class = "text-danger" })

        </div>
        <div class="form-group">

            @Html.ActionLink("Вернуться к списку", "Passengers", null, new { @class = "btn btn-default" })
            <button type="submit" class="btn btn-success">Сохранить</button>

        </div>
    }
</div>



